name: Build and Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    env:
      Solution_Name: DSLRNet.sln  # Replace with your solution name
      Output_Path: publish        # Output directory for published files
      Major_Version: 1            # Major version
      Minor_Version: 0            # Minor version

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true  # Ensure submodules are checked out

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%y%m%d')"
      shell: bash

    - name: Set version
      run: echo "Version=${{ env.Major_Version }}.${{ env.Minor_Version }}.${{ steps.date.outputs.date }}" >> $GITHUB_ENV

    - name: Build solution
      run: dotnet build ${{ env.Solution_Name }} --configuration Release --no-restore /p:Version=${{ env.Version }}

    - name: Publish DSLRNet
      run: dotnet publish DSLRNet/DSLRNet.csproj --configuration Release --output ${{ env.Output_Path }}/DSLRNet /p:Version=${{ env.Version }}

    - name: Publish DSLRNet.Console
      run: dotnet publish DSLRNet.Console/DSLRNet.Console.csproj --configuration Release --output ${{ env.Output_Path }}/DSLRNet.Console /p:Version=${{ env.Version }}

    - name: Combine published outputs
      run: |
        mkdir ${{ env.Output_Path }}/combined
        cp -r ${{ env.Output_Path }}/DSLRNet/* ${{ env.Output_Path }}/combined/
        cp -r ${{ env.Output_Path }}/DSLRNet.Console/* ${{ env.Output_Path }}/combined/

    - name: Create zip file
      run: Compress-Archive -Path ${{ env.Output_Path }}/combined/* -DestinationPath ${{ env.Output_Path }}/DSLRNet-publish-${{ env.Version }}.zip
      shell: pwsh

    - name: Upload zip file
      uses: actions/upload-artifact@v3
      with:
        name: DSLRNet-publish-zip-${{ env.Version }}
        path: ${{ env.Output_Path }}/DSLRNet-publish-${{ env.Version }}.zip
        retention-days: 7  # Optional: specify how long to keep the artifact
